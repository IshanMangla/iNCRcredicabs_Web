//// TODO: replace 'localhost:8080' with the production domain name....

const BASE_URL = 'http://ec2-18-219-151-75.us-east-2.compute.amazonaws.com:8080/NCAB';

export const environment = {
  production: true,
  url:                        BASE_URL,
  loginUrl:                   BASE_URL + "/EmployeeService/login",
  logoutUrl:                  BASE_URL + "/EmployeeService/logout",
  checkLoginUrl:              BASE_URL + "/EmployeeService/check-login-status",
  addEmployeeUrl:             BASE_URL + "/EmployeeService/add-employee",
  activateEmployeeUrl:        BASE_URL + "/EmployeeService/activate-employee",
  deactivateEmployeeUrl:      BASE_URL + "/EmployeeService/deactivate-employee",
  editEmployeeUrl:            BASE_URL + "/EmployeeService/edit-employee",
  viewEmployeeUrl:            BASE_URL + "/EmployeeService/view-employee",
  viewEmployeeByQlidUrl:      BASE_URL + "/EmployeeService/view-employee-by-qlid",
  getManagerByNameUrl:        BASE_URL + "/EmployeeService/get-manager-by-name",
  getAllManagersUrl:          BASE_URL + "/EmployeeService/get-all-managers",
  getAllRolesUrl:             BASE_URL + "/EmployeeService/get-all-roles",
  newAccSetupQlidUrl:         BASE_URL + "/EmployeeService/new-acc-setup",
  forgotpasswordUrl:          BASE_URL + "/EmployeeService/forgot-password",
  forgotpassSetPasswordUrl:   BASE_URL + "/EmployeeService/forgot-password/set-password",
  accSetupSetPasswordUrl:     BASE_URL + "/EmployeeService/new-acc-setup/set-password",
  verifyPwdTokenUrl:          BASE_URL + "/EmployeeService/verify-pwd-token",
  getrequestUrl:              BASE_URL + "/RequestService/getrequest",
  allocateRequest:            BASE_URL + "/RequestService/onApproved",
  employeeRequest:            BASE_URL + "/ReportService/employeereport",
  managerUrl:                 BASE_URL + "/ReportService/managerreport",
  vendorUrl:                  BASE_URL + "/ReportService/vendorreport",
  employeeDashUrl:            BASE_URL + "/EmployeeService/employee-dashboard",
  employeeSetPasswrodUrl:     BASE_URL + "/EmployeeService/change-password",
  employeeManagerDetailsUrl:  BASE_URL + "/EmployeeService/employee-manager-details",
  unscheduledRequestUrl:      BASE_URL + "/RequestService/sendRequest",
  uploadEmployeeExcelUrl:     BASE_URL + "/EmployeeService/UploadFileData",
  getRoleUrl:                 BASE_URL + "/EmployeeService/get-role",
  downloadRequestExcel:       BASE_URL +"/RequestService/getUExcel",
  employeeDetailUrl1: BASE_URL + "/ReportService/employeereportDefaultDetail",
  employeeRequest1: BASE_URL + "/ReportService/employeereportDefaultDetail",
  employeeDetailUrl: BASE_URL + "/ReportService/employeereportParamDetail",
  managerDetailUrl:           BASE_URL + "/ReportService/managerreportParamDetail",
  managerUrl1:                BASE_URL + "/ReportService/managerreportDefaultSummary",
  managerDetailUrl1:          BASE_URL + "/ReportService/managerreportDefaultDetail",
  vendorDetailUrl1:           BASE_URL + "/ReportService/vendorreportDefaultSummary",
  vendorDefaultDetailUrl:     BASE_URL + "/ReportService/vendorreportDefaultDetail",
  vendorDetailUrl:            BASE_URL + "/ReportService/vendorreportParamDetail",
  vendornameUrl:              BASE_URL + "/ReportService/VendorNames",
  billingsummaryUrl:          BASE_URL + "/ReportService/vendorwisebillreport",
  pullExcelfileUrl:           BASE_URL + "/RequestService/pullExcel",
  transportationBillingUrl:   BASE_URL + "/ReportService/transportbillingreport",
  checkinoutreportUrl:        BASE_URL + "/ReportService/checkinoutreport",
  routenoUrl:                 BASE_URL + "/ReportService/RouteNos",
  cabnobyvendorandrouteUrl:   BASE_URL + "/ReportService/getCabNobyVendorandRoute",
  downloadRequestExcelUrl:    BASE_URL + "/RequestService/getUExcel",

  rosterDataUrl:              this.url + "/RosterService/showRosterInfo",
  getVendorDetailUrl:         this.url + "/RosterService/vendorDetails",
  getEmployeeDetailUrl:       this.url + "/RosterService/empDetails",
  getAvailableCabUrl:         this.url + "/RosterService/getCab",
  getQlidUrl:                 this.url + "/RosterService/empqlid",
  createScheduleRouteUrl:     this.url + "/RosterService/insertRouteSCH",
  empDeactiveUrl:             this.url + "/RosterService/empDeactive",
  insertRouteUnschUrl:        this.url + "/RosterService/insertRouteUnSCH",
  getCabListUrl:              this.url + "/RosterService/getcablist",
  getAddQlidUrl:              this.url + "/RosterService/getAddQlid",
  getEmpToDbUrl:              this.url + "/RosterService/AddEmpToDb",
  uploadFileDataUrl:          this.url + "/RosterService/UploadFileData",
  inactiveDataUrl:            this.url + "/RosterService/inactiveqlid",
  editDataUrl:                this.url + "/RosterService/editd",
  getRouteUrl:                this.url + "/RosterService/getRoute",
  getCabNumberUrl:            this.url + "/RosterService/getCabNo",
  updateRouteUrl:             this.url + "/RosterService/showRosterInfo",
  downloadExcelDataUrl:       this.url + "/RosterService/downloadexcel",
  getDriverDetailUrl:         this.url + "/RosterService/driver",
  getRouteDataUrl:            this.url + "/RosterService/getRouteDetails",
};