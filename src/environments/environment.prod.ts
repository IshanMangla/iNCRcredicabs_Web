//// TODO: replace 'localhost:8080' with the production domain name....
export const environment = {
  production: true,
  url:                        "http://localhost:8080/NCAB",
  loginUrl:                   this.url + "/EmployeeService/login",
  logoutUrl:                  this.url + "/EmployeeService/logout",
  checkLoginUrl:              this.url + "/EmployeeService/check-login-status",
  addEmployeeUrl:             this.url + "/EmployeeService/add-employee",
  activateEmployeeUrl:        this.url + "/EmployeeService/activate-employee",
  deactivateEmployeeUrl:      this.url + "/EmployeeService/deactivate-employee",
  editEmployeeUrl:            this.url + "/EmployeeService/edit-employee",
  viewEmployeeUrl:            this.url + "/EmployeeService/view-employee",
  getManagerByNameUrl:        this.url + "/EmployeeService/get-manager-by-name",
  getAllManagersUrl:          this.url + "/EmployeeService/get-all-managers",
  getAllRolesUrl:             this.url + "/EmployeeService/get-all-roles",
  newAccSetupQlidUrl:         this.url + "/EmployeeService/new-acc-setup",
  forgotpasswordUrl:          this.url + "/EmployeeService/forgot-password",
  forgotpassSetPasswordUrl:   this.url + "/EmployeeService/forgot-password/set-password",
  accSetupSetPasswordUrl:     this.url + "/EmployeeService/new-acc-setup/set-password",
  verifyPwdTokenUrl:          this.url + "/EmployeeService/verify-pwd-token",
  getrequestUrl:              this.url + "/RequestService/getrequest",
  allocateRequest:            this.url + "/RequestService/onApproved",
  employeeRequest:            this.url + "/ReportService/employeereport",
  managerUrl:                 this.url + "/ReportService/managerreport",
  vendorUrl:                  this.url + "/ReportService/vendorreport",

  rosterDataUrl:              this.url + "/RosterService/showRosterInfo",
  getVendorDetailUrl:         this.url + "/RosterService/vendorDetails",
  getEmployeeDetailUrl:       this.url + "/RosterService/empDetails",
  getAvailableCabUrl:         this.url + "/RosterService/getCab",
  getQlidUrl:                 this.url + "/RosterService/empqlid",
  createScheduleRouteUrl:     this.url + "/RosterService/insertRouteSCH",
  empDeactiveUrl:             this.url + "/RosterService/empDeactive",
  insertRouteUnschUrl:        this.url + "/RosterService/insertRouteUnSCH",
  getCabListUrl:              this.url + "/RosterService/getcablist",
  getAddQlidUrl:              this.url + "/RosterService/getAddQlid",
  getEmpToDbUrl:              this.url + "/RosterService/AddEmpToDb",
  uploadFileDataUrl:          this.url + "/RosterService/UploadFileData",
  inactiveDataUrl:            this.url + "/RosterService/inactiveqlid",
  editDataUrl:                this.url + "/RosterService/editd",
  getRouteUrl:                this.url + "/RosterService/getRoute",
  getCabNumberUrl:            this.url + "/RosterService/getCabNo",
  updateRouteUrl:             this.url + "/RosterService/showRosterInfo",
  downloadExcelDataUrl:       this.url + "/RosterService/downloadexcel",
  getDriverDetailUrl:         this.url + "/RosterService/driver",
  getRouteDataUrl:            this.url + "/RosterService/getRouteDetails",
};